<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- 1. 配置监听器启动Spring的容器 -->
	<!-- needed for ContextLoaderListener -->
	<context-param>
		<param-name>contextConfigLocation</param-name><!--监听器-->
		<param-value>classpath:applicationContext.xml</param-value><!--项目启动就加载Spring配置文件-->
	</context-param>

	<!-- Bootstraps the root web application context before servlet initialization -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<!-- 2. springmvc的前端控制器，拦截所有的请求 -->
	<!-- The front controller of this Spring Web application, responsible for handling all application requests -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<!-- ！！！没有使用init-param标签，需要将springmvc配置文件放在正确的位置，即同级目录下的dispatcherServlet-servlet -->
		<!--随Tomcat一起启动-->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 处理所有请求映射到视图呈现概述 -->
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- / 接收所有请求, 除了jsp; /* 接收所有请求, 包括jsp -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- 3. 字符编码过滤器，一定在其余filter之前 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<!--请求编码-->
		<init-param>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--响应编码-->
		<init-param>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!--拦截所有请求-->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- 4. Rest风格的配置 -->
	<!--把页面发过来的post请求转为指定的delete或put请求-->
	<!-- 该过滤器根据指定的请求参数(默认是"_method")来修改请求的类型 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HttpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


</web-app>